<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.haomostudio.JuniorSpringMVCTemplate.dao.DepartmentMapper">
  <resultMap id="BaseResultMap" type="com.haomostudio.JuniorSpringMVCTemplate.po.Department">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="parent_department_code" jdbcType="VARCHAR" property="parentDepartmentCode" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime" />
    <result column="simple_name" jdbcType="VARCHAR" property="simpleName" />
    <result column="organization_name" jdbcType="VARCHAR" property="organizationName" />
    <result column="person_liable" jdbcType="VARCHAR" property="personLiable" />
    <result column="organization_id" jdbcType="VARCHAR" property="organizationId" />
    <result column="rank" jdbcType="INTEGER" property="rank" />
    <result column="number_reading" jdbcType="INTEGER" property="numberReading" />
    <result column="person_liable_name" jdbcType="VARCHAR" property="personLiableName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, parent_department_code, code, name, description, create_time, last_update_time, 
    simple_name, organization_name, person_liable, organization_id, rank, number_reading, 
    person_liable_name
  </sql>
  <select id="selectByExample" parameterType="com.haomostudio.JuniorSpringMVCTemplate.po.DepartmentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from department
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="page != null">
      limit #{page.begin} , #{page.length}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from department
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from department
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.haomostudio.JuniorSpringMVCTemplate.po.DepartmentExample">
    delete from department
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.haomostudio.JuniorSpringMVCTemplate.po.Department">
    insert into department (id, parent_department_code, code, 
      name, description, create_time, 
      last_update_time, simple_name, organization_name, 
      person_liable, organization_id, rank, 
      number_reading, person_liable_name)
    values (#{id,jdbcType=VARCHAR}, #{parentDepartmentCode,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{lastUpdateTime,jdbcType=TIMESTAMP}, #{simpleName,jdbcType=VARCHAR}, #{organizationName,jdbcType=VARCHAR}, 
      #{personLiable,jdbcType=VARCHAR}, #{organizationId,jdbcType=VARCHAR}, #{rank,jdbcType=INTEGER}, 
      #{numberReading,jdbcType=INTEGER}, #{personLiableName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.haomostudio.JuniorSpringMVCTemplate.po.Department">
    insert into department
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="parentDepartmentCode != null">
        parent_department_code,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastUpdateTime != null">
        last_update_time,
      </if>
      <if test="simpleName != null">
        simple_name,
      </if>
      <if test="organizationName != null">
        organization_name,
      </if>
      <if test="personLiable != null">
        person_liable,
      </if>
      <if test="organizationId != null">
        organization_id,
      </if>
      <if test="rank != null">
        rank,
      </if>
      <if test="numberReading != null">
        number_reading,
      </if>
      <if test="personLiableName != null">
        person_liable_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="parentDepartmentCode != null">
        #{parentDepartmentCode,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateTime != null">
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="simpleName != null">
        #{simpleName,jdbcType=VARCHAR},
      </if>
      <if test="organizationName != null">
        #{organizationName,jdbcType=VARCHAR},
      </if>
      <if test="personLiable != null">
        #{personLiable,jdbcType=VARCHAR},
      </if>
      <if test="organizationId != null">
        #{organizationId,jdbcType=VARCHAR},
      </if>
      <if test="rank != null">
        #{rank,jdbcType=INTEGER},
      </if>
      <if test="numberReading != null">
        #{numberReading,jdbcType=INTEGER},
      </if>
      <if test="personLiableName != null">
        #{personLiableName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.haomostudio.JuniorSpringMVCTemplate.po.DepartmentExample" resultType="java.lang.Long">
    select count(*) from department
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update department
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.parentDepartmentCode != null">
        parent_department_code = #{record.parentDepartmentCode,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastUpdateTime != null">
        last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.simpleName != null">
        simple_name = #{record.simpleName,jdbcType=VARCHAR},
      </if>
      <if test="record.organizationName != null">
        organization_name = #{record.organizationName,jdbcType=VARCHAR},
      </if>
      <if test="record.personLiable != null">
        person_liable = #{record.personLiable,jdbcType=VARCHAR},
      </if>
      <if test="record.organizationId != null">
        organization_id = #{record.organizationId,jdbcType=VARCHAR},
      </if>
      <if test="record.rank != null">
        rank = #{record.rank,jdbcType=INTEGER},
      </if>
      <if test="record.numberReading != null">
        number_reading = #{record.numberReading,jdbcType=INTEGER},
      </if>
      <if test="record.personLiableName != null">
        person_liable_name = #{record.personLiableName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update department
    set id = #{record.id,jdbcType=VARCHAR},
      parent_department_code = #{record.parentDepartmentCode,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      last_update_time = #{record.lastUpdateTime,jdbcType=TIMESTAMP},
      simple_name = #{record.simpleName,jdbcType=VARCHAR},
      organization_name = #{record.organizationName,jdbcType=VARCHAR},
      person_liable = #{record.personLiable,jdbcType=VARCHAR},
      organization_id = #{record.organizationId,jdbcType=VARCHAR},
      rank = #{record.rank,jdbcType=INTEGER},
      number_reading = #{record.numberReading,jdbcType=INTEGER},
      person_liable_name = #{record.personLiableName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.haomostudio.JuniorSpringMVCTemplate.po.Department">
    update department
    <set>
      <if test="parentDepartmentCode != null">
        parent_department_code = #{parentDepartmentCode,jdbcType=VARCHAR},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateTime != null">
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="simpleName != null">
        simple_name = #{simpleName,jdbcType=VARCHAR},
      </if>
      <if test="organizationName != null">
        organization_name = #{organizationName,jdbcType=VARCHAR},
      </if>
      <if test="personLiable != null">
        person_liable = #{personLiable,jdbcType=VARCHAR},
      </if>
      <if test="organizationId != null">
        organization_id = #{organizationId,jdbcType=VARCHAR},
      </if>
      <if test="rank != null">
        rank = #{rank,jdbcType=INTEGER},
      </if>
      <if test="numberReading != null">
        number_reading = #{numberReading,jdbcType=INTEGER},
      </if>
      <if test="personLiableName != null">
        person_liable_name = #{personLiableName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.haomostudio.JuniorSpringMVCTemplate.po.Department">
    update department
    set parent_department_code = #{parentDepartmentCode,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      simple_name = #{simpleName,jdbcType=VARCHAR},
      organization_name = #{organizationName,jdbcType=VARCHAR},
      person_liable = #{personLiable,jdbcType=VARCHAR},
      organization_id = #{organizationId,jdbcType=VARCHAR},
      rank = #{rank,jdbcType=INTEGER},
      number_reading = #{numberReading,jdbcType=INTEGER},
      person_liable_name = #{personLiableName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="com.haomostudio.JuniorSpringMVCTemplate.po.DepartmentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from department
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>